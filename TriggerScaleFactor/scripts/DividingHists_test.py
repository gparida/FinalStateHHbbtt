import ROOT

dataRootFile_Run2016F = ROOT.TFile("2016/GaneshJetID_OneMuon_noOverlap/2016RunF_DataHistos.root")
dataDir_Run2016F = dataRootFile_Run2016F.GetDirectory("DataHistos")
dataDeno_Run2016F = dataDir_Run2016F.Get("h_data_denominator")
dataNum_Run2016F = dataDir_Run2016F.Get("h_data_numerator")
#MuPtDeno_Run2016F = dataDir_Run2016F.Get("h_data_denominator_MuPt")
#MuPtNum_Run2016F = dataDir_Run2016F.Get("h_data_numerator_MuPt")

dataRootFile_Run2016G = ROOT.TFile("2016/GaneshJetID_OneMuon_noOverlap/2016RunG_DataHistos.root")
dataDir_Run2016G = dataRootFile_Run2016G.GetDirectory("DataHistos")
dataDeno_Run2016G = dataDir_Run2016G.Get("h_data_denominator")
dataNum_Run2016G = dataDir_Run2016G.Get("h_data_numerator")
#MuPtDeno_Run2016G = dataDir_Run2016G.Get("h_data_denominator_MuPt")
#MuPtNum_Run2016G = dataDir_Run2016G.Get("h_data_numerator_MuPt")

dataRootFile_Run2016H = ROOT.TFile("2016/GaneshJetID_OneMuon_noOverlap/2016RunH_DataHistos.root")
dataDir_Run2016H = dataRootFile_Run2016H.GetDirectory("DataHistos")
dataDeno_Run2016H = dataDir_Run2016H.Get("h_data_denominator")
dataNum_Run2016H = dataDir_Run2016H.Get("h_data_numerator")
MuPtDeno_Run2016H = dataDir_Run2016H.Get("h_data_denominator_MuPt")
MuPtNum_Run2016H = dataDir_Run2016H.Get("h_data_numerator_MuPt")

dataNum_Run2016F.Add(dataNum_Run2016G)
dataNum_Run2016F.Add(dataNum_Run2016H)
dataDeno_Run2016F.Add(dataDeno_Run2016G)
dataDeno_Run2016F.Add(dataDeno_Run2016H)

#MuPtNum_Run2016F.Add(MuPtNum_Run2016G)
#MuPtNum_Run2016F.Add(MuPtNum_Run2016H)
#MuPtDeno_Run2016F.Add(MuPtDeno_Run2016G)
#MuPtDeno_Run2016F.Add(MuPtDeno_Run2016H)

#dataEff_MuPt = ROOT.TEfficiency(MuPtNum_Run2016F,MuPtDeno_Run2016F)
dataEff = ROOT.TEfficiency(dataNum_Run2016F,dataDeno_Run2016F)
dataEff_hist = dataNum_Run2016F.Clone()
dataEff_hist.Divide(dataDeno_Run2016F)

#Data
dataEff.SetLineColor(49)
dataEff.SetMarkerStyle(25)
dataEff.SetMarkerColor(49)
dataEff.SetMarkerSize(1)
dataEff.SetTitle("Efficiency Plot; MET (GeV) ; Efficiency")

#dataEff_MuPt.SetLineColor(49)
#dataEff_MuPt.SetMarkerStyle(25)
#dataEff_MuPt.SetMarkerColor(49)
#dataEff_MuPt.SetMarkerSize(1)
#dataEff_MuPt.SetTitle("Efficiency Plot; Muon[0]_pt (GeV) ; Efficiency")


#dataEff.SetMinimum(-0.05)
#dataEff.SetMaximum(1.1)
#dataEff.SetTitle("Efficiency Plot")
#dataEff.GetXaxis().SetTitle("MET (GeV)")
#dataEff.GetYaxis().SetTitle("Efficiency")
#dataEff.GetYaxis().SetRangeUser(-0.05,1.1)

can1 = ROOT.TCanvas("canvas1", "efficiency")
can1.SetGrid()
#mcEff.Draw("ap")
dataEff.Draw("same ap")
#graph=mcEff.GetPaintedGraph()
#graph.SetMinimum(0.0)
#graph.SetMaximum(1.1)
legend = ROOT.TLegend(0.5100287,0.12,0.70,0.22)
legend.SetFillStyle(1001)
#legend.AddEntry(mcEff,"MC","ep")
legend.AddEntry(dataEff,"Data","ep")
legend.Draw("same")
can1.SaveAs("2016/GaneshJetID_OneMuon_noOverlap/DataSingleMu_Eff_2016.pdf")
can1.SaveAs("2016/GaneshJetID_OneMuon_noOverlap/DataSingleMu_Eff_2016.png")

##can2 = ROOT.TCanvas("canvas2", "efficiency")
##can2.SetGrid()
###mcEff.Draw("ap")
##dataEff_MuPt.Draw("same ap")
###graph=mcEff.GetPaintedGraph()
###graph.SetMinimum(0.0)
###graph.SetMaximum(1.1)
##legend = ROOT.TLegend(0.5100287,0.12,0.70,0.22)
##legend.SetFillStyle(1001)
###legend.AddEntry(mcEff,"MC","ep")
##legend.AddEntry(dataEff_MuPt,"Data","ep")
##legend.Draw("same")
##can2.SaveAs("2016/TestWithIdIso/Mu_Pt_DataSingleMu_Eff_2016.pdf")
##can2.SaveAs("2016/TestWithIdIso/Mu_Pt_DataSingleMu_Eff_2016.png")